
- Mise en place MVVM (http://martinfowler.com/eaaDev/PresentationModel.html)
  - ok : binding de base
  - manque les props avancées : visible, enabled...

- Guava EventBus pour la navigation
  - ok : navigation explicite depuis un modele de vue
  - ok : evts applicatifs (sommaire...)

- Sécurité : intégration de Apache Chiro :
  http://shiro.apache.org/authentication-features.html
  - ok : intégration avec JPA
  - intégration avec un serveur LDAP à faire

UI :
- ok : ne pas utiliser un Navigator, mais faire la navigation a la main
- ok : découverte auto des classes "View" par Spring
- ok : gestion de la navigation par evt
- ok : shiro reste utilisé, mais indirectement (a la main sans passer par le ShiroNavigator)

 __TODO__ :

 (((
 - notification de la vue par le modele de vue :
   - le modele de vue peut ecouter les evts applicatifs et reagir
   - la vue associée doit se mettre à jour
   - ex : suppression d'une ligne dans un tableau en cours d'affichage : la ligne disparait automatiquement
 )))

 - TU Binding : il reste a controler le binding dans les tables

 - menu de navigation entre les vues :
   * propose les vues découvertes (plugins)
   - affiche un icone et un nom pour chaque vue
   - gestion des droits d'acces (acces au plugin en fonction de roles)

 - chaque module/ecran(?) doit contenir son fichier de langue

 (- intégration LDAP)

 - module d'edition des Patients

 - mise en place CQRS + event sourcing
   http://www.jayway.com/2013/03/08/aggregates-event-sourcing-distilled/
   http://www.jayway.com/2013/06/20/dont-publish-domain-events-return-them/

 - module technique qui log les actions :
   - ecoute l'activité (evts des autres modules) et log dans un fichier

 - refactoring :
   - vérif hexagonal pattern ok
   - découpage en sous projets : 1 par module
   - découpage en sous projets : 1 par couche
   - donc m x c projets ?
   - systeme d'evts : comment faire pour que les evts d'un module par un autre ne necessitent pas l'import du module complet ?
     - sous projet a part contenant les evts => les evts ne doivent pas contenir d'objets métiers pour rendre la couche autonome

 - intégration de Camel